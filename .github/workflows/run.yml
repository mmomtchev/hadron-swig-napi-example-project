name: 'CI'
on: 
  - pull_request
  - push
  - workflow_dispatch
  - workflow_call

jobs:
  swig:
    runs-on: ubuntu-latest
    name: Generate the SWIG wrappers ${{ matrix.no_async }}

    strategy:
      fail-fast: false
      matrix:
        no_async: ['', '-no_async']

    steps:
    - name: Checkout
      uses: actions/checkout@v5
    - uses: mmomtchev/setup-swig@main
      with:
        branch: jse
        token: ${{ secrets.GITHUB_TOKEN }}
        version: main

    - name: Verify SWIG
      run: swig-jse -version

    - name: Run SWIG to generated the wrappers
      run: npm run swig
      env:
        SWIG_FEATURES: ${{ matrix.no_async && '-DNO_ASYNC' || '' }}

    - name: Upload SWIG-generated wrappers
      uses: actions/upload-artifact@v4
      with:
        name: swig-generated${{ matrix.no_async }}
        path: |
          build/*

  
  build-native:
    runs-on: ${{ matrix.platform }}
    name: Build native ${{ matrix.platform }}${{ matrix.no_async }}
    needs: swig

    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]
        no_async: ['', '-no_async']

    steps:
    - name: Checkout
      uses: actions/checkout@v5
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Platform ID
      id: platform
      shell: bash
      run: node -p '"plat=" + os.platform() + "-" + os.arch()' >> "$GITHUB_OUTPUT"

    - name: Download the SWIG-generated wrappers
      uses: actions/download-artifact@v5
      with:
        name: swig-generated${{ matrix.no_async }}
        path: build
        
    - name: Run npm install (build)
      run: npm install --build-from-source ${{ matrix.no_async && '--disable-async' || '' }} --enable-zlib --verbose --foreground-scripts --skip-wasm-example
    
    - name: Upload native artifact ${{ matrix.platform }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.platform.outputs.plat }}${{ matrix.no_async }}
        path: lib/binding/*


  build-native-xpack:
    runs-on: ${{ matrix.platform }}
    name: Build native-xpack ${{ matrix.platform }}${{ matrix.no_async }}
    needs: swig

    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]
        no_async: ['', '-no_async']

    steps:
    - name: Checkout
      uses: actions/checkout@v5
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Platform ID
      id: platform
      shell: bash
      run: node -p '"plat=" + os.platform() + "-" + os.arch()' >> "$GITHUB_OUTPUT"

    - name: Download the SWIG-generated wrappers
      uses: actions/download-artifact@v5
      with:
        name: swig-generated${{ matrix.no_async }}
        path: build
        
    - name: Install the dependencies
      run: npm install --skip-native-example --skip-wasm-example

    - name: Build manually
      run: |
        npx xpm install
        npx xpm install --config native-xpack
        npx xpm run clang --config native-xpack -- --version
        npx xpm run prepare --config native-xpack
        npx xpm run configure --config native-xpack -- -Dzlib=true ${{ matrix.no_async && '-Dasync=false' || '' }}
        npx xpm run build --config native-xpack
    
    - name: Upload native-xpack artifact ${{ matrix.platform }}
      uses: actions/upload-artifact@v4
      with:
        name: xpack-${{ steps.platform.outputs.plat }}${{ matrix.no_async }}
        path: lib/binding/*


  build-wasm:
    runs-on: ubuntu-latest
    name: Build WASM ${{ matrix.no_async }}
    needs: swig

    strategy:
      fail-fast: false
      matrix:
        no_async: ['', '-no_async']

    steps:
    - name: Checkout
      uses: actions/checkout@v5
    - name: setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Setup emscripten
      uses: mymindstorm/setup-emsdk@v14
      with:
        version: 4.0.2
        
    - name: Verify emscripten
      run: emcc -v

    - name: Download the SWIG-generated wrappers
      uses: actions/download-artifact@v5
      with:
        name: swig-generated${{ matrix.no_async }}
        path: build

    - name: Run npm install (build)
      run: npm install --build-wasm-from-source ${{ matrix.no_async && '--disable-async' || '' }} --enable-zlib --verbose --foreground-scripts --skip-native-example
    
    - name: Upload WASM artifact
      uses: actions/upload-artifact@v4
      with:
        name: emscripten-wasm32${{ matrix.no_async }}
        path: lib/binding/*


  test:
    runs-on: ${{ matrix.platform }}
    name: Test ${{ matrix.platform }}${{ matrix.no_async }}
    needs: [ build-wasm, build-native ]

    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]
        no_async: ['', '-no_async']

    steps:
    - name: Checkout
      uses: actions/checkout@v5
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Platform ID
      id: platform
      shell: bash
      run: node -p '"plat=" + os.platform() + "-" + os.arch()' >> "$GITHUB_OUTPUT"

    - name: Download the native artifact ${{ matrix.platform }}
      uses: actions/download-artifact@v5
      with:
        name: ${{ steps.platform.outputs.plat }}${{ matrix.no_async }}
        path: lib/binding

    - name: Download the WASM artifact
      uses: actions/download-artifact@v5
      with:
        name: emscripten-wasm32${{ matrix.no_async }}
        path: lib/binding

    - name: Install dependencies
      run: npm install --skip-native-example --skip-wasm-example
    
    - name: Run the Node.js tests
      run: npm run test:nodejs
      env:
        NO_ASYNC: ${{ matrix.no_async && '1' || '' }}

    - name: Run the browser tests
      uses: coactions/setup-xvfb@v1
      with:
        run: npm run test:browser
      env:
        NO_ASYNC: ${{ matrix.no_async && '1' || '' }}

    - name: Test building the webpack project
      run: npm run build:webpack
      env:
        NO_ASYNC: ${{ matrix.no_async && '1' || '' }}


  test-xpack:
    runs-on: ${{ matrix.platform }}
    name: Test ${{ matrix.platform }}-xpack${{ matrix.no_async }}
    needs: [ build-wasm, build-native-xpack ]

    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]
        no_async: ['', '-no_async']

    steps:
    - name: Checkout
      uses: actions/checkout@v5
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Platform ID
      id: platform
      shell: bash
      run: node -p '"plat=" + os.platform() + "-" + os.arch()' >> "$GITHUB_OUTPUT"

    - name: Download the native xPack-built artifact ${{ matrix.platform }}
      uses: actions/download-artifact@v5
      with:
        name: xpack-${{ steps.platform.outputs.plat }}${{ matrix.no_async }}
        path: lib/binding

    - name: Download the WASM artifact
      uses: actions/download-artifact@v5
      with:
        name: emscripten-wasm32${{ matrix.no_async }}
        path: lib/binding

    - name: Install dependencies
      run: npm install --skip-native-example --skip-wasm-example
    
    - name: Run the Node.js tests
      run: npm run test:nodejs
      env:
        NO_ASYNC: ${{ matrix.no_async && '1' || '' }}

    - name: Run the browser tests
      run: npm run test:browser
      env:
        NO_ASYNC: ${{ matrix.no_async && '1' || '' }}

    - name: Test building the webpack project
      run: npm run build:webpack
      env:
        NO_ASYNC: ${{ matrix.no_async && '1' || '' }}
