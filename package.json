{
  "name": "hadron-swig-napi-example-project",
  "version": "1.0.0",
  "description": "Example template for using SWIG Node-API for a dual-build Node.js/native + Browser/WASM project",
  "type": "module",
  "main": "./lib/native.cjs",
  "exports": {
    ".": {
      "types": "./lib/native.d.cts",
      "require": "./lib/native.cjs"
    },
    "./wasm": {
      "types": "./wasm/index.d.mts",
      "import": "./wasm/index.mjs"
    }
  },
  "scripts": {
    "test": "npm run test:nodejs && npm run test:browser",
    "test:nodejs": "npx mocha",
    "test:browser": "cd test/browser && npx webpack --mode=production && npx karma start ./karma.conf.cjs",
    "configure:native": "npx xpm run prepare --config native",
    "configure:native-xpack": "npx xpm run prepare --config native-xpack",
    "configure:wasm": "npx xpm run prepare --config wasm",
    "generate": "npx xpm run generate",
    "build:native": "npm run configure:native && npx xpm run build --config native",
    "build:native-xpack": "npm run configure:native-xpack && npx xpm run build --config native-xpack",
    "build:wasm": "npm run configure:wasm && npx xpm run build --config wasm",
    "build:webpack": "cd test/browser && npx webpack --mode=production",
    "build": "npm run build:native && npm run build:wasm",
    "lint": "clang-format -i src/*.cc src/*.h && eslint test",
    "prepare": "npx xpm run npm-install",
    "dev": "cd test/browser && npx webpack serve --mode=production",
    "gcov": "cd build/native-debug && gcov example.node.p/*.o",
    "lcov": "npx c8 report --reporter=text-lcov > build/native-debug/tests.lcov"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mmomtchev/hadron-swig-napi-example-project.git"
  },
  "keywords": [
    "swig",
    "node-api",
    "napi",
    "wasm",
    "xpack"
  ],
  "author": "Momtchil Momtchev <momtchil@momtchev.com>",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/mmomtchev/hadron-swig-napi-example-project/issues"
  },
  "homepage": "https://github.com/mmomtchev/hadron-swig-napi-example-project#readme",
  "dependencies": {
    "@emnapi/runtime": "=1.5.0",
    "@mmomtchev/hadron": "^1.0.0",
    "@mmomtchev/prebuild-install": "^1.0.2",
    "@mmomtchev/xpm": "github:mmomtchev/xpm-js",
    "emnapi": "=1.5.0",
    "node-addon-api": "^8.5.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@eslint/js": "^9.36.0",
    "@types/chai": "^5.2.2",
    "@types/mocha": "^10.0.10",
    "@types/node": "^24.5.2",
    "@typescript-eslint/eslint-plugin": "^8.45.0",
    "@typescript-eslint/parser": "^8.32.1",
    "c8": "^10.1.3",
    "chai": "^6.2.0",
    "eslint": "^9.36.0",
    "eslint-plugin-mocha": "^11.1.0",
    "globals": "^16.4.0",
    "karma": "^6.4.4",
    "karma-chrome-launcher": "^3.2.0",
    "karma-mocha": "^2.0.1",
    "karma-verbose-reporter": "^0.0.8",
    "mocha": "github:mmomtchev/mocha#mmom",
    "ts-loader": "^9.5.4",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.6",
    "typescript": "^5.9.3",
    "webpack": "^5.101.3",
    "webpack-cli": "^6.0.1",
    "webpack-dev-server": "^5.2.2"
  },
  "binary": {
    "napi_versions": [
      6
    ],
    "package_name": "{platform}-{arch}.tar.gz",
    "remote_path": "mmomtchev/hadron-swig-napi-example-project/releases/download/{tag_prefix}{version}/",
    "host": "https://github.com"
  },
  "xpack": {
    "minimumXpmRequired": "0.21.0",
    "include": [
      "@mmomtchev/hadron/hadron.json"
    ],
    "dependencies": {},
    "devDependencies": {
      "@mmomtchev/python-xpack": "3.12.11-2",
      "@mmomtchev/meson-xpack": "1.8.0-3",
      "@mmomtchev/conan-xpack": "2.18.1-2",
      "@xpack-dev-tools/cmake": "3.27.9-1.2",
      "@xpack-dev-tools/ninja-build": "1.11.1-3.1"
    },
    "properties": {
      "module_name": "example",
      "native": true,
      "wasm": true,
      "flavor": "{% ifNpmOptionDisabled async %}sync{% else %}async{% endifNpmOptionDisabled %}",
      "conan": true,
      "commandGenerateWrappers": "swig-jse -javascript -napi -typescript -c++ -outdir swig -exports '../{{ properties.module_name }}.cjs' -o swig{{ path.sep }}{{ properties.module_name }}_wrap.cc src{{ path.sep }}{{ properties.module_name }}.i"
    },
    "actions": {
      "generate": "{{ properties.commandGenerateWrappers }}"
    },
    "buildConfigurations": {
      "wasm": {
        "properties": {
          "argsConanInstall": "{% ifNpmOptionDisabled async %}-pr:a=zlibng-sync-bug.profile{% endifNpmOptionDisabled %}"
        }
      }
    }
  }
}
